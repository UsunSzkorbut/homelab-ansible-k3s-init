---
- name: Prepare pre-requisites
  block:
    - name: Prepare pre-requisites | Install Python3-pip
      ansible.builtin.apt:
        name: python3-pip
      register: pip_install_result
      until: pip_install_result is succeeded
      retries: 5
      delay: 15

    - name: Prepare pre-requisites | Install Python3-REQ
      ansible.builtin.pip:
        name:
          - pyyaml
          - kubernetes
          - jsonpatch

    - name: Prepare pre-requisites | Set UFW rules | Allow port 6443/TCP
      ansible.builtin.command: ufw allow 6443/tcp

    - name: Prepare pre-requisites | Set UFW rules | Allow pods subnetwork
      ansible.builtin.command: ufw allow from 10.42.0.0/16 to any

    - name: Prepare pre-requisites | Set UFW rules | Allow services subnetwork
      ansible.builtin.command: ufw allow from 10.43.0.0/16 to any

    - name: Prepare pre-requisites | Set UFW rules | Display rules
      ansible.builtin.command: ufw status

    - name: Prepare pre-requisites | Create temporary directory
      ansible.builtin.file:
        path: "{{ tmp_dir }}"
        state: directory
        mode: '0755'
        
- name: Install K3s
  block:
    - name: Install K3s | Download install script
      ansible.builtin.get_url:
        url: https://get.k3s.io
        dest: "{{ k3s.path.install }}"
        mode: '0755'

    - name: Install K3s | Run install script
      ansible.builtin.shell: INSTALL_K3S_VERSION={{ k3s.version }} K3S_KUBECONFIG_MODE="644" INSTALL_K3S_EXEC="--disable servicelb" {{ k3s.path.install }}
      args:
        creates: "{{ k3s.path.bin }}"

    - name: Install K3s | Verify installation
      ansible.builtin.command: k3s --version
      register: k3s_ver

    - name: Install K3s | Output version
      tags: debug
      ansible.builtin.debug:
        msg: "Successfully installed version: {{ k3s_ver.stdout }}"
  notify: "remove_tmp"
        
- name: Delegate K3s API token
  block:
    - name: Delegate K3s API token | Save file output to register
      ansible.builtin.shell: cat {{ k3s.path.node_token }} | tr -d " \t\n\r"
      register: k3s_token_reg

    - name: Delegate K3s API token | Delegate output to localhost
      ansible.builtin.set_fact:
        k3s_token: "{{ k3s_token_reg.stdout }}"
      run_once: true
      delegate_to: localhost
      delegate_facts: true
