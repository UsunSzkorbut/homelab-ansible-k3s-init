---
- name: Install pre-requisites
  block:
    - name: Install pre-requisites | Python3-pip
      ansible.builtin.apt:
        name: python3-pip
      register: pip_install_result
      until: pip_install_result is succeeded
      retries: 5
      delay: 15

    - name: Install pre-requisites | Python3-REQ
      ansible.builtin.pip:
        name:
          - pyyaml
          - kubernetes
          - jsonpatch

    - name: Install pre-requisites | UFW Stopped
      ansible.builtin.shell: ufw disable
        
- name: Install K3s
  block:
    - name: Install K3s | Download install script
      ansible.builtin.get_url:
        url: https://get.k3s.io
        dest: "{{ path.k3s.install }}"
        mode: '0755'

    - name: Install K3s | Run install script
      ansible.builtin.shell: INSTALL_K3S_VERSION={{ k3s.version }} K3S_KUBECONFIG_MODE="644" INSTALL_K3S_EXEC="--disable servicelb" {{ path.k3s.install }}
      args:
        creates: "{{ path.k3s.bin }}"

    - name: Install K3s | Verify installation
      ansible.builtin.command: k3s --version
      register: k3s_ver

    - name: Install K3s | Output version
      tags: debug
      ansible.builtin.debug:
        msg: "Successfully installed version: {{ k3s_ver.stdout }}"
        
- name: Delegate K3s API token
  block:
    - name: Delegate K3s API token | Save file output to register
      ansible.builtin.shell: cat /var/lib/rancher/k3s/server/node-token | tr -d " \t\n\r"
      register: k3s_token_reg
    
    - name: Delegate K3s API token | Delegate output to localhost
      ansible.builtin.set_fact:
        k3s_token: "{{ k3s_token_reg.stdout }}"
      run_once: true
      delegate_to: localhost
      delegate_facts: true
  
  