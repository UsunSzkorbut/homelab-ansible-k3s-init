---
- name: Included task for Vagrant deployer master
  block:
    - name: Install K3s | Run install script on deployer master | Vagrant
      tags:
        - k3s
        - deployer
      ansible.builtin.shell: >
        INSTALL_K3S_VERSION={{ k3s.version }}
        K3S_KUBECONFIG_MODE="644"
        INSTALL_K3S_EXEC="
        --cluster-init
        --disable servicelb
        --disable traefik
        --node-ip {{ hostvars[inventory_hostname].ansible_eth1.ipv4.address }}
        --flannel-iface eth1"
        {{ k3s.path.install }}
      args:
        creates: "{{ k3s.path.bin }}"
      register: reg_k3s_deployer_master
      notify: "remove_tmp"

  rescue:
    - name: ERROR | Run install script on deployer master | Display error lines
      tags:
        - error_handling
      ansible.builtin.debug:
        msg: "{{ reg_k3s_deployer_master.stderr_lines }}"

    - name: ERROR | Run install script on deployer master | Attempt restarting service
      tags:
        - error_handling
      ansible.builtin.systemd_service:
        name: k3s
        state: restarted
      register: reg_k3s_dm_service_status

    - name: ERROR | Run install script on deployer master | Uninstall remaining K3s files
      tags:
        - error_handling
      ansible.builtin.shell: "{{ k3s.path.server_uninstall_bin }}"
      args:
        removes: "{{ k3s.path.bin }}"
      when: reg_k3s_dm_service_status.state != "started"

  always:
    - name: Install K3s | Verify K3s installation on deployer master
      tags:
        - verify
      ansible.builtin.debug:
        msg: "{{ reg_k3s_deployer_master.stdout_lines }}"

- name: Prepare pre-requisites
  tags:
    - kubeconfig
  block:
    - name: Install K3s | Creating .kube directory
      ansible.builtin.file:
        path: "{{ k3s_kube_conf.kube_dir_path }}"
        state: directory
        mode: '0644'

    - name: Install K3s | Coping k3s.yaml into .kube directory
      ansible.builtin.copy:
        src: "{{ k3s_kube_conf.kube_conf_src }}"
        remote_src: yes
        dest: "{{ k3s_kube_conf.kube_dir_path }}/config"
        mode: '0400'

  rescue:
    - name: ERROR | Prepare pre-requisites | Notify about failure
      tags:
        - error_handling
      ansible.builtin.debug:
        msg: "Prepare pre-requisites failed. Check the logs for further information."

    - name: ERROR | Prepare pre-requisites | Rollback .kube directory changes
      tags:
        - error_handling
      ansible.builtin.file:
        path: "{{ k3s_kube_conf.kube_dir_path }}"
        state: absent
      notify: "remove_tmp"
