---
# TODO check kubernetes.core modules applicability
# TODO urls as variables
- name: Install K3s
  block:
    - name: Install K3s | Download install script
      ansible.builtin.get_url:
        url: https://get.k3s.io
        dest: "{{ path.k3s.install }}"
        mode: '0755'

    - name: Install K3s | Run install script
      ansible.builtin.shell: "{{ path.k3s.install }} --write-kubeconfig-mode 644 --disable servicelb"
      args:
        creates: "{{ path.k3s.bin }}"

    - name: Install K3s | Verify installation
      ansible.builtin.command: k3s --version
      register: k3s_ver

    - name: Install K3s | Output version
      tags: debug
      ansible.builtin.debug:
        msg: "Successfully installed version: {{ k3s_ver.stdout }}"

- name: Install Metallb
  ansible.builtin.shell: >
    "kubectl apply
     -f https://raw.githubusercontent.com/metallb/metallb/{{ metallb.version }}/config/manifests/metallb-native.yaml"

- name: Check Metallb deployment status
  ansible.builtin.command: "kubectl rollout status deployment -n {{ namespace.metallb }}"
  register: metallb_deployment_status

- name: Display Metallb deployment output
  ansible.builtin.debug:
    var: metallb_deployment_status.stdout_lines

- name: Create IPAddressPool file for Metallb
  ansible.builtin.template:
    src: ipaddresses.yml.j2
    dest: "{{ path.metallb.ipaddresses }}"

- name: Apply IPAddressPool file for Metallb
  ansible.builtin.command: "kubectl apply -f {{ path.metallb.ipaddresses }}"

- name: Create L2Advertisement file for Metallb
  ansible.builtin.template:
    src: layer2.yml.j2
    dest: "{{ path.metallb.layer2 }}"

- name: Apply L2Advertisement file for Metallb
  shell: "kubectl apply -f {{ path.metallb.layer2 }}"

- name: Install Helm
  block:
    - name: Install Helm | Execute install script
      ansible.builtin.shell: curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      register: helm_install
  
    - name: Install Helm | Display Helm installation output
      tags: debug
      ansible.builtin.debug:
        var: helm_install.stdout_lines

- name: Creating .kube directory
  ansible.builtin.file:
    path: "{{ path.kube_dir }}"
    state: directory
    mode: '0644'

- name: Coping k3s.yaml into .kube directory
  ansible.builtin.copy:
    src: "{{ path.k3s.conf_src }}"
    remote_src: yes
    dest: "{{ path.kube_dir }}/config"
    mode: '0400'

- name: Add Helm repositories
  block:
    - name: Add Helm repositories | For Rancher
      ansible.builtin.shell: helm repo add rancher-alpha https://releases.rancher.com/server-charts/alpha

    - name: Add Helm repositories | For Cert-manager
      ansible.builtin.shell: helm repo add jetstack https://charts.jetstack.io
  notify: "helm repo update"
  
- name: Display Helm repositories output
  tags: debug
  ansible.builtin.debug:
    var: helm_repos_up.stdout_lines

- name: Apply jetstack manifest for cert-manager deployment
  ansible.builtin.shell: >
    "kubectl apply --validate=false
     -f https://github.com/jetstack/cert-manager/releases/download/{{ cert_manager.version }}/cert-manager.crds.yaml"

- name: Create namespace for cert-manager
  block:
    - name: Create namespace for cert-manager
      ansible.builtin.shell: "kubectl create namespace {{ namespace.cert }}"
      register: cert_manager_namespace
      ignore_errors: true

    - name: Create namespace for cert-manager | Check cert-manager namespace status
      tags: debug
      ansible.builtin.debug:
        var: cert_manager_namespace

- name: Install cert-manager using Helm
  ansible.builtin.shell: >
    "helm install cert-manager jetstack/cert-manager
     --namespace {{ namespace.cert }}
     --version {{ cert_manager.version }}"
  register: cert_manager_install_helm

- name: Check cert-manager deployment status
  block:
    - name: Check cert-manager deployment status
      ansible.builtin.shell: "kubectl rollout status deployment -n {{ namespace.cert }}"
      register: cert_manager_deployment_status

    - name: Display cert-manager Helm deployment output
      tags: debug
      ansible.builtin.debug:
        var: cert_manager_deployment_status.stdout_lines

- name: Create namespace for Rancher
  block:
    - name: Create namespace for Rancher
      ansible.builtin.shell: "kubectl create namespace {{ namespace.rancher }}"
      register: rancher_namespace
      ignore_errors: true

    - name: Check Rancher namespace status
      tags: debug
      ansible.builtin.debug:
        var: rancher_namespace

- name: Install Rancher using Helm
  ansible.builtin.shell: >
    "helm install rancher rancher-alpha/rancher
     --devel
     --namespace {{ namespace.rancher }}
     --set hostname={{ rancher.hostname }}
     --set bootstrapPassword={{ rancher.bootstrapPassword }}"
  register: rancher_install_helm

- name: Check Rancher deployment status
  block:
    - name: Check Rancher deployment status
      ansible.builtin.shell: kubectl rollout status deployment/rancher -n {{ namespace.rancher }}
      register: rancher_deployment_status
  
    - name: Display Rancher deployment status output
      ansible.builtin.debug:
        var: rancher_deployment_status.stdout_lines
