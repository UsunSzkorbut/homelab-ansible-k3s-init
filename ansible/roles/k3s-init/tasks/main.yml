---
# TODO optimize package installation
- name: Prepare pre-requisites
  block:
    - name: Prepare pre-requisites | Install Python3-pip
      ansible.builtin.apt:
        name: python3-pip
      register: pip_install_result
      until: pip_install_result is succeeded
      retries: 5
      delay: 30

    - name: Prepare pre-requisites | Install Python3-REQ
      ansible.builtin.pip:
        name:
          - pyyaml
          - kubernetes
          - jsonpatch

    - name: Prepare pre-requisites | Install nfs-common
      ansible.builtin.apt:
        name: nfs-common
      register: nfs_install_result
      until: nfs_install_result is succeeded
      retries: 5
      delay: 30

    - name: Prepare pre-requisites | Create temporary directory
      ansible.builtin.file:
        path: "{{ tmp_dir }}"
        state: directory
        mode: '0755'

- name: Install K3s
  block:
    - name: Install K3s | Download install script
      ansible.builtin.get_url:
        url: https://get.k3s.io
        dest: "{{ k3s.path.install }}"
        mode: '0755'
#--node-taint CriticalAddonsOnly=true:NoExecute
#--node-taint node-role.kubernetes.io/master=true:NoSchedule
    - name: Install K3s | Run install script on tainted master
      ansible.builtin.shell: >
        INSTALL_K3S_VERSION={{ k3s.version }}
        K3S_KUBECONFIG_MODE="644"
        INSTALL_K3S_EXEC="--cluster-init --disable servicelb --disable traefik --node-taint node-role.kubernetes.io/master=true:NoSchedule"
        {{ k3s.path.install }}
      args:
        creates: "{{ k3s.path.bin }}"
      when: inventory_hostname in groups['servers'][0]
        
    - name: Delegate K3s API token
      block:
        - name: Delegate K3s API token | Save file output to register
          ansible.builtin.shell: cat {{ k3s.path.node_token }} | tr -d " \t\n\r"
          register: k3s_token_reg
    
        - name: Delegate K3s API token | Delegate output to localhost
          ansible.builtin.set_fact:
            k3s_token: "{{ k3s_token_reg.stdout }}"
          run_once: true
          delegate_to: localhost
          delegate_facts: true
      when: inventory_hostname in groups['servers'][0]

    - name: Install K3s | Run install script on master server
      block:
        - name: Install K3s | Proxmox variant | Run install script on master server
          ansible.builtin.shell: >
            INSTALL_K3S_VERSION={{ k3s.version }}
            K3S_KUBECONFIG_MODE="644"
            INSTALL_K3S_EXEC="server --disable traefik"
            K3S_URL=https://{{ hostvars['k3s-master-01'].ansible_default_ipv4.address }}:6443
            K3S_TOKEN={{ hostvars['localhost'].k3s_token }} {{ k3s.path.install }}
          args:
            creates: "{{ k3s.path.bin }}"
          register: reg_k3s_master
          when: not use_vagrant
        - name: Install K3s | Vagrant variant | Run install script on master server
          ansible.builtin.shell: >
            INSTALL_K3S_VERSION={{ k3s.version }}
            K3S_KUBECONFIG_MODE="644"
            INSTALL_K3S_EXEC="server --disable traefik"
            K3S_URL=https://{{ hostvars['k3s-master-01'].ansible_eth1.ipv4.address }}:6443
            K3S_TOKEN={{ hostvars['localhost'].k3s_token }}
            {{ k3s.path.install }}
          args:
            creates: "{{ k3s.path.bin }}"
          register: reg_k3s_master
          when: use_vagrant
      rescue:
        - name: K3S installation failed on master server
          ansible.builtin.debug:
            msg: "{{ reg_k3s_master.stderr_lines }}"
          notify: "remove_tmp"
      when: inventory_hostname in groups['servers'][1]
      
    - name: Install K3s | Run install script on agents
      block:
        - name: Install K3s | Proxmox variant | Run install script on agents
          ansible.builtin.shell: >
            INSTALL_K3S_VERSION={{ k3s.version }}
            INSTALL_K3S_EXEC="agent"
            K3S_URL=https://{{ hostvars['k3s-master-01'].ansible_default_ipv4.address }}:6443
            K3S_TOKEN={{ hostvars['localhost'].k3s_token }}
            {{ k3s.path.install }}
          args:
            creates: "{{ k3s.path.bin }}"
          when: not use_vagrant
        - name: Install K3s | Vagrant variant | Run install script on agents
          ansible.builtin.shell:
            INSTALL_K3S_VERSION={{ k3s.version }}
            INSTALL_K3S_EXEC="agent"
            K3S_URL=https://{{ hostvars['k3s-master-01'].ansible_eth1.ipv4.address }}:6443
            K3S_TOKEN={{ hostvars['localhost'].k3s_token }}
            {{ k3s.path.install }}
          args:
            creates: "{{ k3s.path.bin }}"
          when: use_vagrant
      when:
        - inventory_hostname in groups['agents']

    - name: Install K3s | Verify installation
      ansible.builtin.command: k3s --version
      register: k3s_ver

    - name: Install K3s | Output version
      tags: debug
      ansible.builtin.debug:
        msg: "Successfully installed version: {{ k3s_ver.stdout }}"
  notify: "remove_tmp"
        